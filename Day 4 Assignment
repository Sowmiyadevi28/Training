Task 1: Data Types/Variables
Write a program that declares two integer variables, swaps their values without using a third variable, and prints the result

public class Main {
    public static void main(String[] args) {
        
        int a = 5;
        int b = 10;

        System.out.println("Before swapping:");
        System.out.println("a = " + a);
        System.out.println("b = " + b);

       
        a = a + b;
        b = a - b;
        a = a - b;

        System.out.println("\nAfter swapping:");
        System.out.println("a = " + a);
        System.out.println("b = " + b);
    }
}


Create a program that simulates a simple calculator using command-line arguments to perform and print the result of addition, subtraction, multiplication, and division..


public class SimpleCalculator {
    public static void main(String[] args) {
        if (args.length != 3) {
            System.out.println("Usage: java SimpleCalculator <operator> <operand1> <operand2>");
            return;
        }

        char operator = args[0].charAt(0);
        double operand1 = Double.parseDouble(args[1]);
        double operand2 = Double.parseDouble(args[2]);
        double result = 0;

        switch (operator) {
            case '+':
                result = operand1 + operand2;
                break;
            case '-':
                result = operand1 - operand2;
                break;
            case '*':
                result = operand1 * operand2;
                break;
            case '/':
                if (operand2 != 0) {
                    result = operand1 / operand2;
                } else {
                    System.out.println("Error: Division by zero");
                    return;
                }
                break;
            default:
                System.out.println("Invalid operator. Please use '+', '-', '*', or '/'");
                return;
        }

        System.out.println("Result: " + result);
    }
}



Write a Java program that reads an integer and prints whether it is a prime number using a for loop and if statements.

public class PrimeNumberChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a number: ");
        int number = scanner.nextInt();

        boolean isPrime = true;

       
        if (number <= 1) {
            isPrime = false;
        } else {
            for (int i = 2; i <= Math.sqrt(number); i++) {
                if (number % i == 0) {
                    isPrime = false;
                    break;
                }
            }
        }

        if (isPrime) {
            System.out.println(number + " is a prime number.");
        } else {
            System.out.println(number + " is not a prime number.");
        }

        scanner.close();
    }
}

Create a program that declares an array of integers, initializes it with consecutive numbers, and prints the array in reverse order.

public class ReverseArray {
    public static void main(String[] args) {
       
        int[] numbers = new int[10];
        
       
        for (int i = 0; i < numbers.length; i++) {
            numbers[i] = i + 1;
        }

       
        System.out.println("Original array:");
        printArray(numbers);

       
        System.out.println("\nArray in reverse order:");
        printReverseArray(numbers);
    }

  
    public static void printArray(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    
    public static void printReverseArray(int[] arr) {
        for (int i = arr.length - 1; i >= 0; i--) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }
}






